// <auto-generated />
using System;
using DesafioViajaNet.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioViajaNet.Entity.Migrations
{
    [DbContext(typeof(DesafioViajaNetDbContext))]
    [Migration("20190624151134_CriacaTabelaComportamentosHomeLading")]
    partial class CriacaTabelaComportamentosHomeLading
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioViajaNet.Dominio.Cidade", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(150);

                    b.Property<long>("EstadoCodigo");

                    b.HasKey("Codigo");

                    b.HasIndex("EstadoCodigo");

                    b.ToTable("CIDADES");
                });

            modelBuilder.Entity("DesafioViajaNet.Dominio.Estado", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(150);

                    b.HasKey("Codigo");

                    b.ToTable("ESTADOS");
                });

            modelBuilder.Entity("DesafioViajaNet.Dominio.HomeComportamento", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnName("BROWSER")
                        .HasMaxLength(70);

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnName("IP")
                        .HasMaxLength(30);

                    b.Property<string>("NomePagina")
                        .IsRequired()
                        .HasColumnName("NOME_PAGINA")
                        .HasMaxLength(70);

                    b.HasKey("Codigo");

                    b.ToTable("HOME_COMPORTAMENTO");
                });

            modelBuilder.Entity("DesafioViajaNet.Dominio.LandingComportamento", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CODIGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnName("BROWSER")
                        .HasMaxLength(70);

                    b.Property<long>("CodigoDestino");

                    b.Property<long>("CodigoOrigem");

                    b.Property<DateTime>("DataViagem")
                        .HasColumnName("DATA_VIAGEM");

                    b.Property<int>("DiasVagem")
                        .HasColumnName("DIAS_VIAGEM")
                        .HasMaxLength(3);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasMaxLength(150);

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnName("IP")
                        .HasMaxLength(30);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(150);

                    b.Property<string>("NomePagina")
                        .IsRequired()
                        .HasColumnName("NOME_PAGINA")
                        .HasMaxLength(70);

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoDestino")
                        .IsUnique();

                    b.HasIndex("CodigoOrigem")
                        .IsUnique();

                    b.ToTable("LANDING_COMPORTAMENTOS");
                });

            modelBuilder.Entity("DesafioViajaNet.Dominio.Cidade", b =>
                {
                    b.HasOne("DesafioViajaNet.Dominio.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoCodigo")
                        .HasConstraintName("FK_CIDADES_ESTADOS")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DesafioViajaNet.Dominio.LandingComportamento", b =>
                {
                    b.HasOne("DesafioViajaNet.Dominio.Cidade", "Destino")
                        .WithOne("LandingComportamentoDestino")
                        .HasForeignKey("DesafioViajaNet.Dominio.LandingComportamento", "CodigoDestino")
                        .HasConstraintName("FK_LANDING_CIDADES_DESTINO")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DesafioViajaNet.Dominio.Cidade", "Origem")
                        .WithOne("LandingComportamentoOrigem")
                        .HasForeignKey("DesafioViajaNet.Dominio.LandingComportamento", "CodigoOrigem")
                        .HasConstraintName("FK_LANDING_CIDADES_ORIGEM")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
